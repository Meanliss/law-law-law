# Docker Compose for Legal Q&A System

services:
  # Backend FastAPI Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal-qa-backend
    ports:
      - "7860:7860"
    volumes:
      # Mount code for hot reload (development)
      - ./backend:/app
      # Persist cache between restarts
      - legal-qa-cache:/app/cache
      # Mount data folder
            # Mount data folders with appropriate permissions
      - ./backend/data/pdf:/app/data/pdf:ro              # Read-only PDFs
      - ./backend/data/json_manual:/app/data/json_manual # Production JSONs (read-write)
      - ./backend/data/json_auto:/app/data/json_auto     # Auto-converted JSONs (read-write)
      - ./backend/data/.conversion_registry.json:/app/data/.conversion_registry.json  # Registry file
            # Feedback logs
      - ./backend/feedback_logs:/app/feedback_logs
    env_file:
      - ./backend/.env
    restart: unless-stopped
    networks:
      - legal-qa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Development Server
  frontend:
    image: node:22-alpine
    container_name: legal-qa-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Prevent overwriting node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - legal-qa-network
    environment:
      - VITE_API_URL=http://backend:7860
      - DOCKER_ENV=true

# Volumes for persistent data
volumes:
  legal-qa-cache:
    driver: local

# Network
networks:
  legal-qa-network:
    driver: bridge
